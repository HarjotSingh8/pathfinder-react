{"version":3,"sources":["components/header.js","components/node.js","components/grid.js","components/dijsktra.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","className","style","width","height","class","onClick","this","props","findpath","overflow","maxValue","minValue","value","rows","onChange","updaterows","setState","cols","updatecols","Component","Node","state","row","col","isStart","isFinish","isWall","color","padding","border","borderWidth","borderColor","backgroundColor","display","onMouseDown","onMouseEnter","onMouseUp","dijsktra","console","log","App","grid","closestNodes","mousedown","start","startx","starty","end","endx","endy","getrowscols","r","creategrid","c","i","newrow","j","push","isVisited","handleMouseDown","handleMouseEnter","handleMouseUp","g","updatestart","updateend","updatewall","newGrid","slice","node","newNode","map","rowIdx","key","nodeIdx","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6e226581.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport InputRange from \"react-input-range\";\nimport \"react-input-range/lib/css/index.css\";\nclass Header extends Component {\n  render() {\n    return (\n      <div\n        className=\"header ml-0 row bg-dark text-white justify-content-center justify-content-sm-start\"\n        style={{ width: \"100%\", height: \"24px\" }}\n      >\n        <div className=\"row col-12 col-sm-3 justify-content-center justify-content-sm-start\">\n          <div className=\"ml-0 ml-sm-3 d-inline-flex\">\n            <b>PATHFINDER</b>\n          </div>\n        </div>\n        <div class=\"row col-4 col-sm-3\">\n          <button\n            class=\"btn btn-dark p-0 px-2\"\n            onClick={this.props.findpath}\n            style={{ height: \"24px\" }}\n          >\n            dijkstra\n          </button>\n        </div>\n        <div className=\"row col-sm-12 col-md-6 justify-content-sm-center justify-content-md-end\">\n          <div className=\"row col-6\">\n            <div className=\"col-3\">rows</div>\n            <div className=\"col-9 mt-1\" style={{ overflow: \"hidden\" }}>\n              <InputRange\n                maxValue={50}\n                minValue={15}\n                value={this.props.rows}\n                onChange={value => {\n                  this.props.updaterows(value);\n                  this.setState({ rows: value });\n                }}\n              />\n            </div>\n          </div>\n          <div className=\"row col-6\">\n            <div className=\"col-3\">cols</div>\n            <div className=\"col-9 mt-1\" style={{ overflow: \"hidden\" }}>\n              <InputRange\n                maxValue={50}\n                minValue={15}\n                value={this.props.cols}\n                onChange={value => {\n                  this.props.updatecols(value);\n                  this.setState({ cols: value });\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Header;\n","import React, { Component } from \"react\";\nimport \"./node.css\";\nclass Node extends Component {\n  state = {\n    class: \"blank\",\n    row: null,\n    col: null\n  };\n  constructor() {\n    super();\n    //console.log(\"constructor called\");\n  }\n  /*\n  mousedown = () => {\n    this.props.handleMouseDown(this.state.row, this.state.col);\n  };\n  mouseenter = () => {\n    console.log(this.state.isWall);\n    this.props.handleMouseEnter(this.state.row, this.state.col);\n    this.setState({ wall: true, color: \"black\" });\n  };*/\n  componentDidUpdate() {\n    //console.log(\"updated\");\n    //console.log(this.state.class != \"start\");\n    if (this.props.isStart == true && this.state.class !== \"start\")\n      this.setState({ class: \"start\" });\n    else if (this.props.isFinish == true && this.state.class != \"finish\")\n      this.setState({ class: \"finish\" });\n    else if (this.state.class != \"start\" && this.state.class != \"finish\") {\n      if (this.props.isWall == true && this.state.class != \"wall\")\n        this.setState({ class: \"wall\" });\n      if (this.props.isWall == false && this.state.class != \"blank\")\n        this.setState({ class: \"blank\" });\n    }\n  }\n  componentDidMount() {\n    //console.log(\"mounted\");\n    if (this.props.isWall != this.state.isWall)\n      this.setState({ isWall: this.props.isWall });\n    //console.log(this.props.row);\n    if (this.state.isWall == true) this.setState({ color: \"black\" });\n    this.setState({ row: this.props.row, col: this.props.col });\n  }\n  render() {\n    return (\n      <div\n        style={{\n          height: 100 / this.props.rows + \"vh\",\n          width: 100 / this.props.cols + \"vw\",\n          padding: \"0px\",\n          border: \"solid\",\n          borderWidth: \"0.5px\",\n          borderColor: \"gray\",\n          backgroundColor: this.state.color,\n          display: \"inline-block\"\n        }}\n        onMouseDown={() =>\n          this.props.onMouseDown(this.state.row, this.state.col)\n        }\n        onMouseEnter={() =>\n          this.props.onMouseEnter(this.state.row, this.state.col)\n        }\n        onMouseUp={() => this.props.onMouseUp(this.state.row, this.state.col)}\n      >\n        <div\n          class={\"node-\" + this.state.class}\n          style={{ width: \"100%\", height: \"100%\" }}\n        ></div>\n      </div>\n    );\n  }\n}\n\nexport default Node;\n","import React, { Component } from \"react\";\nimport \"react-input-range/lib/css/index.css\";\nimport Node from \"./node\";\nclass Grid extends Component {\n  render() {\n    return (\n      <div\n        className=\"row  bg-white text-dark justify-content-center\"\n        style={{ height: \"100%\", width: \"100%\" }}\n      >\n        {this.props.grid}\n      </div>\n    );\n  }\n}\nexport default Grid;\n","function dijsktra() {\n  console.log(\"dijsktra\");\n}\nexport default dijsktra;\n","import React, { Component } from \"react\";\nimport Header from \"./header\";\nimport Grid from \"./grid\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Node from \"./node\";\nimport dijsktra from \"./dijsktra\";\n\nclass App extends Component {\n  state = {\n    rows: 18,\n    cols: 32,\n    grid: [],\n    closestNodes: [],\n    mousedown: false,\n    start: false,\n    startx: null,\n    starty: null,\n    end: false,\n    endx: null,\n    endy: null\n  };\n  constructor() {\n    super();\n  }\n  getrowscols = () => {\n    return { rows: this.state.rows, cols: this.state.cols };\n  };\n  updaterows = r => {\n    this.setState({ rows: r });\n    this.creategrid();\n  };\n  updatecols = c => {\n    this.setState({ cols: c });\n    this.creategrid();\n  };\n  componentDidMount() {\n    this.creategrid();\n  }\n  creategrid = () => {\n    let grid = [];\n    for (let i = 0; i < this.state.rows; i++) {\n      let newrow = [];\n      for (let j = 0; j < this.state.cols; j++) {\n        newrow.push({\n          isWall: false,\n          isStart: false,\n          isFinish: false,\n          isVisited: false,\n          row: i,\n          col: j,\n          rows: this.state.rows,\n          cols: this.state.cols,\n          handleMouseDown: this.handleMouseDown,\n          handleMouseEnter: this.handleMouseEnter,\n          handleMouseUp: this.handleMouseUp\n        });\n      }\n      grid.push(newrow);\n    }\n    this.setState({ grid });\n    console.log(grid);\n    return grid;\n  };\n  handleMouseDown = (row, col) => {\n    if (this.state.start == false) {\n      let g = this.updatestart(this.state.grid, row, col);\n      this.setState({ grid: g, start: true, startx: col, starty: row });\n    } else if (this.state.end == false) {\n      let g = this.updateend(this.state.grid, row, col);\n      this.setState({ grid: g, end: true, endx: col, endy: row });\n    } else {\n      console.log(\"wallupdated\");\n      let g = this.updatewall(this.state.grid, row, col);\n      this.setState({ grid: g, mousedown: true });\n    }\n  };\n  handleMouseEnter = (row, col) => {\n    //console.log(\"entered\");\n    if (this.state.mousedown == true) {\n      //this.updatewall(this.state.grid, row, col);\n      let g = this.updatewall(this.state.grid, row, col);\n      this.setState({ grid: g });\n    }\n  };\n  handleMouseUp = () => {\n    //console.log(\"up\");\n    this.setState({ mousedown: false });\n  };\n\n  updatewall = (grid, row, col) => {\n    //console.log(row);\n    const newGrid = grid.slice();\n    const node = newGrid[row][col];\n    const newNode = {\n      ...node,\n      isWall: !node.isWall\n    };\n    newGrid[row][col] = newNode;\n    return newGrid;\n  };\n  updatestart = (grid, row, col) => {\n    //console.log(row);\n    const newGrid = grid.slice();\n    const node = newGrid[row][col];\n    const newNode = {\n      ...node,\n      isStart: true\n    };\n    newGrid[row][col] = newNode;\n    return newGrid;\n  };\n  updateend = (grid, row, col) => {\n    //console.log(row);\n    const newGrid = grid.slice();\n    const node = newGrid[row][col];\n    const newNode = {\n      ...node,\n      isFinish: true\n    };\n    newGrid[row][col] = newNode;\n    return newGrid;\n  };\n  findpath = () => {\n    dijsktra();\n  };\n  render() {\n    return (\n      <div className=\"App\" style={{ height: \"100vh\" }}>\n        <Header\n          rows={this.state.rows}\n          cols={this.state.cols}\n          updaterows={this.updaterows}\n          updatecols={this.updatecols}\n          findpath={this.findpath}\n        />\n        <div\n          className=\"row ml-0 bg-white text-dark justify-content-center\"\n          style={{ height: \"100%\", width: \"100%\" }}\n        >\n          <div className=\"grid row mx-auto\" style={{ width: \"100%\" }}>\n            {this.state.grid.map((row, rowIdx) => {\n              return (\n                <div className=\"row mx-auto\" key={rowIdx}>\n                  {row.map((node, nodeIdx) => {\n                    const {\n                      row,\n                      col,\n                      isFinish,\n                      isStart,\n                      isWall,\n                      isVisited\n                    } = node;\n                    return (\n                      <Node\n                        key={nodeIdx}\n                        col={col}\n                        row={row}\n                        rows={this.state.rows}\n                        cols={this.state.cols}\n                        isFinish={isFinish}\n                        isStart={isStart}\n                        isWall={isWall}\n                        isVisited={isVisited}\n                        onMouseDown={(row, col) =>\n                          this.handleMouseDown(row, col)\n                        }\n                        onMouseEnter={(row, col) =>\n                          this.handleMouseEnter(row, col)\n                        }\n                        onMouseUp={() => this.handleMouseUp()}\n                      ></Node>\n                    );\n                  })}\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}